package com.aci;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class EmployeeAspect {

	@Pointcut("execution(* Employee.*(..))")
	private void log() {
	}
	
	@Around("log()")
	private void check(ProceedingJoinPoint proceedingJoinPoint) {
		Employee emp = (Employee) proceedingJoinPoint.getTarget();
	}
	
	@After("log()")
	public void printInfoAfter(JoinPoint joinPoint) {
		System.out.println("*** After calling " + joinPoint.getSignature());
	}

	@Before("log()")
	public void printInfo(JoinPoint joinPoint) {
		System.out.println("*** Before calling " + joinPoint.getSignature());
	}

}
